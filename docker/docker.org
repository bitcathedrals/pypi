* This is a tool for building a docker layer

Start from the pythonsh pythonsh layer

#+BEGIN_SRC docker-build :tangle Dockerfile.template
FROM codermattie:2-3.11.8

LABEL docker-version = "@DOCKER_VERSION@"
LABEL python-version = "@PYTHON_VERSION@"
LABEL timestamp = "@TIMESTAMP@"
#+END_SRC

Do everything in home.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
WORKDIR /home
#+END_SRC

Create a build script that creates the launcher, and runs docke-update
to generate the Dockerfile, and docker-build to build the container

#+BEGIN_SRC bash :shebang "#! /usr/bin/env bash" :tangle "../build-docker.sh"
CONTAINER_PORT=8080
CONTAINER_PACKAGES=/home/packages

cp `which run-in-venv.sh` docker/
py.sh pipfile >docker/Pipfile
mklauncher.sh python pypi-server run -p $CONTAINER_PORT $CONTAINER_PACKAGES >docker/pypi.sh

./py.sh docker-build
#+END_SRC

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN test -d $HOME/packages || mkdir -p $HOME/packages

COPY Dockerfile run-in-env.sh pypi-launcher.sh Pipfile .
RUN chmod u+x pypi-launcer.sh run-in-env.sh
#+END_SRC

Install the server.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN ./run-in-venv.sh python pipenv install
#+END_SRC

Setup the server.

#+BEGIN_SRC docker-build :tangle Dockerfile.template
EXPOSE 8080
ENTRYPOINT["/home/pypi.sh"]
#+END_SRC
