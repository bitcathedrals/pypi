* This is a tool for building a docker layer

Start from the pythonsh pythonsh layer

#+BEGIN_SRC docker-build :tangle Dockerfile.template
FROM codermattie/pythonsh:4 AS pythonsh
FROM scratch
COPY --from=pythonsh / /

LABEL docker-version = "@DOCKER_VERSION@"
LABEL timestamp = "@TIMESTAMP@"
#+END_SRC

Create a build script that creates a script to install the server and
invokes docker-build to build the container

#+BEGIN_SRC bash :shebang "#! /usr/bin/env bash" :tangle "../build-docker.sh"
./py.sh check || exit 1

CONTAINER_PORT=8080
CONTAINER_PACKAGES=/home/packages

cp `which batch-in-venv.sh` docker/install-server.sh
cat >>docker/install-server.sh <<INSTALLER
echo "HOME is $HOME"
echo "USER is $USER"
echo "PWD is $PWD"
echo -n "whoami is: "
whoami

pyenv exec pipenv install --skip-lock
INSTALLER

py.sh pipfile >docker/Pipfile
mklauncher.sh python python pypi-server run -p $CONTAINER_PORT $CONTAINER_PACKAGES >docker/pypi.sh

dock-build.sh build
#+END_SRC

Copy the files into /home and 
#+BEGIN_SRC docker-build :tangle Dockerfile.template
WORKDIR /home
ENV HOME=/home

COPY Dockerfile install-server.sh pypi.sh Pipfile .

RUN cd $HOME && (test -d packages || mkdir -p packages)
RUN cd $HOME && chown python * && chmod u+x *.sh && chmod u+rwx packages
RUN cd $HOME && bash -xv install-server.sh python
#+END_SRC

Server Entry Point

#+BEGIN_SRC docker-build :tangle Dockerfile.template
USER python

EXPOSE 8080
ENTRYPOINT [/home/pypi.sh]
#+END_SRC
