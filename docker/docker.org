* This is a tool for building a docker layer

Start from the pythonsh pythonsh layer

#+BEGIN_SRC docker-build :tangle Dockerfile.template
FROM codermattie/pythonsh:4 AS pythonsh
FROM scratch
COPY --from=pythonsh / /

LABEL docker-version = "@DOCKER_VERSION@"
LABEL timestamp = "@TIMESTAMP@"
#+END_SRC

#+BEGIN_SRC docker-build :tangle Dockerfile.template
USER $USER
WORKDIR /home
export HOME=/home
#+END_SRC

Create a build script that creates the launcher, and runs docke-update
to generate the Dockerfile, and docker-build to build the container

#+BEGIN_SRC bash :shebang "#! /usr/bin/env bash" :tangle "../build-docker.sh"
CONTAINER_PORT=8080
CONTAINER_PACKAGES=/home/packages

cp `which batch-in-venv.sh` docker/install-server.sh
cat >>docker/install-server.sh <<INSTALLER
echo "HOME is $HOME"
echo "USER is $USER"
echo "PWD is $PWD"
echo -n "whoami is: "
whoami

pyenv exec pipenv install --skip-lock
INSTALLER

py.sh pipfile >docker/Pipfile
mklauncher.sh python pypi-server run -p $CONTAINER_PORT $CONTAINER_PACKAGES >docker/pypi.sh

dock-build.sh build
#+END_SRC

#+BEGIN_SRC docker-build :tangle Dockerfile.template
COPY Dockerfile install-server.sh pypi.sh Pipfile .
RUN cd $HOME && bash -xv install-server.sh python
#+END_SRC

Server Entry Point

#+BEGIN_SRC docker-build :tangle Dockerfile.template
RUN test -d packages || mkdir -p packages

EXPOSE 8080
ENTRYPOINT ["/home/pypi.sh"]
#+END_SRC
